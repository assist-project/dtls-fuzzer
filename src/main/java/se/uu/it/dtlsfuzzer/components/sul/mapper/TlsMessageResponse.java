package se.uu.it.dtlsfuzzer.components.sul.mapper;

import de.rub.nds.tlsattacker.core.protocol.message.DtlsHandshakeMessageFragment;
import de.rub.nds.tlsattacker.core.protocol.message.TlsMessage;
import de.rub.nds.tlsattacker.core.record.Record;
import de.rub.nds.tlsattacker.core.workflow.action.executor.MessageActionResult;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

/**
 * Encapsulates packets generated by the SUL in response to a TlsMessage.
 */
public class TlsMessageResponse {
    private final List<Record> records;

    private final List<DtlsHandshakeMessageFragment> messageFragments;

    private final List<TlsMessage> messages;

    public TlsMessageResponse(MessageActionResult result) {
        records = result.getRecordList().stream().map(ar -> (Record) ar).collect(Collectors.toUnmodifiableList());
        messageFragments = Collections.unmodifiableList(result.getMessageFragmentList());
        messages = result.getMessageList().stream().map(m -> (TlsMessage) m).collect(Collectors.toUnmodifiableList());
    }

    public List<Record> getRecords() {
        return records;
    }

    public List<DtlsHandshakeMessageFragment> getMessageFragments() {
        return messageFragments;
    }

    public List<TlsMessage> getMessages() {
        return messages;
    }
}

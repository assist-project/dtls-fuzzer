<Config>
    <enforceSettings>false</enforceSettings>
    <quickReceive>false</quickReceive>
    <earlyStop>false</earlyStop>
    <stopActionsAfterFatal>false</stopActionsAfterFatal>
    <stopReceivingAfterFatal>false</stopReceivingAfterFatal>
    <addServerNameIndicationExtension>false</addServerNameIndicationExtension>
    <addRenegotiationInfoExtension>false</addRenegotiationInfoExtension>
    <addSignatureAndHashAlgorithmsExtension>false</addSignatureAndHashAlgorithmsExtension>
    <addHeartbeatExtension>false</addHeartbeatExtension>
    <addExtendedMasterSecretExtension>false</addExtendedMasterSecretExtension>

    <!-- for input-determinism, set it to false -->
    <useFreshRandom>true</useFreshRandom>
    
    <!-- Note: this ensures that TLS-Attacker uses the null cipher suite as the initial cipher suite -->
    <defaultSelectedCipherSuite>TLS_NULL_WITH_NULL_NULL</defaultSelectedCipherSuite>
    <defaultClientSupportedCipherSuites>TLS_NULL_WITH_NULL_NULL</defaultClientSupportedCipherSuites>
    <defaultServerSupportedCipherSuites>TLS_NULL_WITH_NULL_NULL</defaultServerSupportedCipherSuites>
    
    <addEllipticCurveExtension>true</addEllipticCurveExtension>
    <addECPointFormatExtension>true</addECPointFormatExtension>
    <addClientCertificateTypeExtension>true</addClientCertificateTypeExtension>
    <addServerCertificateTypeExtension>true</addServerCertificateTypeExtension>
    <defaultClientNamedGroups>SECP256R1</defaultClientNamedGroups>
    <defaultClientSupportedSignatureAndHashAlgorithms>ECDSA_SHA256</defaultClientSupportedSignatureAndHashAlgorithms>
    <supportedSignatureAndHashAlgorithms>ECDSA_SHA256</supportedSignatureAndHashAlgorithms>
    <defaultSelectedSignatureAndHashAlgorithm>ECDSA_SHA256</defaultSelectedSignatureAndHashAlgorithm>
    
    <!-- Note: PSK user/pwd: "Client_identity"/0x1234 -->
    <defaultPSKIdentity>436C69656E745F6964656E74697479</defaultPSKIdentity>
    <defaultPSKKey>1234</defaultPSKKey>
    
    <!-- Note: the first option is disabled because we found it excluded too many messages that you'd want to capture
    during learning. Updating the context based on these messages could uncover new paths, hence the second option is enabled. -->
    <dtlsExcludeOutOfOrder>false</dtlsExcludeOutOfOrder>
    <dtlsUpdateOnOutOfOrder>true</dtlsUpdateOnOutOfOrder>
    
    <clientCertificateTypeDesiredTypes>RAW_PUBLIC_KEY</clientCertificateTypeDesiredTypes>
    <serverCertificateTypeDesiredTypes>RAW_PUBLIC_KEY</serverCertificateTypeDesiredTypes>
    <defaultSelectedServerCertificateType>RAW_PUBLIC_KEY</defaultSelectedServerCertificateType>
    <defaultSelectedClientCertificateType>RAW_PUBLIC_KEY</defaultSelectedClientCertificateType>
   
       <!-- Note: this fixes any certificate input -->
    <autoSelectCertificate>false</autoSelectCertificate>
    <autoAdjustSignatureAndHashAlgorithm>false</autoAdjustSignatureAndHashAlgorithm>
    <defaultExplicitCertificateKeyPair>
        <certPublicKeyType>ECDSA</certPublicKeyType>
        <certSignatureType>ECDSA</certSignatureType>
        <certificateBytes>
        3059301306072a8648ce3d020106082a8648ce3d0301070342000436dfe2c6f9f2ed29da0a9a8f62684e916375ba10300c28c5e47cfbf25fa58f5271a0d4fcde1ab8785a3c786935a7cfabe93f987209daed0b4fabc36fc772f829
		</certificateBytes>
        <EcPublicKey>
            <point>
                <xFieldElementFp>
                    <data>36DFE2C6F9F2ED29DA0A9A8F62684E916375BA10300C28C5E47CFBF25FA58F52</data>
                    <modulus>FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF</modulus>
                </xFieldElementFp>
                <yFieldElementFp>
                    <data>71A0D4FCDE1AB8785A3C786935A7CFABE93F987209DAED0B4FABC36FC772F829</data>
                    <modulus>FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF</modulus>
                </yFieldElementFp>
            </point>
            <group>SECP256R1</group>
        </EcPublicKey>
        <EcPrivateKey>
            <privatekey>41C1CB6B51247A144321435B7A80E714896A33BBAD7294CA401455A194A949FA</privatekey>
            <group>SECP256R1</group>
        </EcPrivateKey>
        <signatureGroup>SECP256R1</signatureGroup>
        <publicKeyGroup>SECP256R1</publicKeyGroup>
    </defaultExplicitCertificateKeyPair>
</Config>

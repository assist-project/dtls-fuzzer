Testing Report

FragmentationBug: {   bugId: 1
   inputs: RSA_CLIENT_HELLO RSA_CLIENT_HELLO CERTIFICATE MUTATING_CERTIFICATE_SplittingMutator(RANDOM,3)_RandomSwapMutator_se.uu.it.modeltester.mutate.fragment.FragmentOverlapMutator@7088e87f PSK_CLIENT_KEY_EXCHANGE RSA_CLIENT_HELLO
   expected: HELLO_VERIFY_REQUEST SERVER_HELLO,CERTIFICATE,CERTIFICATE_REQUEST,SERVER_HELLO_DONE TIMEOUT TIMEOUT TIMEOUT TIMEOUT
   actual: TIMEOUT TIMEOUT TIMEOUT TIMEOUT TIMEOUT TIMEOUT
   state: s10
   accessSequence: RSA_CLIENT_HELLO RSA_CLIENT_HELLO CERTIFICATE
   fragmentingInput: MUTATING_CERTIFICATE_SplittingMutator(RANDOM,3)_RandomSwapMutator_se.uu.it.modeltester.mutate.fragment.FragmentOverlapMutator@7088e87f
   fragmentedInput: MUTATED_CERTIFICATE_SplittingMutation(Fragmentation[F<0,456>,F<456,20>,F<476,506>])_ReorderingMutation([2, 1, 0])_SplittingMutation(Fragmentation[F<476,506>,F<456,350>,F<0,456>])
}
FragmentationBug: {   bugId: 2
   inputs: RSA_CLIENT_HELLO RSA_CLIENT_HELLO CERTIFICATE MUTATING_CERTIFICATE_SplittingMutator(EVEN,2)_EmptyFragmentMutator PSK_CLIENT_KEY_EXCHANGE RSA_CLIENT_HELLO
   expected: HELLO_VERIFY_REQUEST SERVER_HELLO,CERTIFICATE,CERTIFICATE_REQUEST,SERVER_HELLO_DONE TIMEOUT TIMEOUT TIMEOUT TIMEOUT
   actual: TIMEOUT TIMEOUT TIMEOUT TIMEOUT TIMEOUT TIMEOUT
   state: s10
   accessSequence: RSA_CLIENT_HELLO RSA_CLIENT_HELLO CERTIFICATE
   fragmentingInput: MUTATING_CERTIFICATE_SplittingMutator(EVEN,2)_EmptyFragmentMutator
   fragmentedInput: MUTATED_CERTIFICATE_SplittingMutation(Fragmentation[F<0,491>,F<491,491>])_+F<0,0>
}
FragmentationBug: {   bugId: 3
   inputs: RSA_CLIENT_HELLO RSA_CLIENT_HELLO EMPTY_CERTIFICATE MUTATING_PSK_CLIENT_KEY_EXCHANGE_SplittingMutator(EVEN,3) EMPTY_CERTIFICATE Alert(WARNING,CLOSE_NOTIFY) RSA_CLIENT_HELLO
   expected: HELLO_VERIFY_REQUEST SERVER_HELLO,CERTIFICATE,CERTIFICATE_REQUEST,SERVER_HELLO_DONE TIMEOUT TIMEOUT TIMEOUT TIMEOUT SERVER_HELLO,CERTIFICATE,CERTIFICATE_REQUEST,SERVER_HELLO_DONE
   actual: TIMEOUT TIMEOUT TIMEOUT TIMEOUT TIMEOUT TIMEOUT TIMEOUT
   state: s12
   accessSequence: RSA_CLIENT_HELLO RSA_CLIENT_HELLO EMPTY_CERTIFICATE
   fragmentingInput: MUTATING_PSK_CLIENT_KEY_EXCHANGE_SplittingMutator(EVEN,3)
   fragmentedInput: MUTATED_PSK_CLIENT_KEY_EXCHANGE_SplittingMutation(Fragmentation[F<0,6>,F<6,6>,F<12,5>])
}
